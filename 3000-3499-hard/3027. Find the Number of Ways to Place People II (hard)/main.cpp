// #include <bits/stdc++.h>

#include <algorithm>
#include <bitset>
#include <cassert>
#include <chrono>
#include <cmath>
#include <deque>
#include <fstream>
#include <functional>
#include <iomanip>
#include <iostream>
#include <iterator>
#include <limits>
#include <list>
#include <map>
#include <memory>
#include <numeric>
#include <optional>
#include <random>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <unordered_map>
#include <unordered_set>
#include <variant>
#include <vector>

using namespace std::literals;

using ll = long long;
using ld = long double;
using ii = std::pair<int, int>;
using vi = std::vector<int>;
using vvi = std::vector<vi>;
using vvvi = std::vector<vvi>;
using vl = std::vector<ll>;
using vvl = std::vector<vl>;
using vvvl = std::vector<vvl>;
using vii = std::vector<ii>;
using vb = std::vector<bool>;
using vd = std::vector<ld>;
using vs = std::vector<std::string>;
using vc = std::vector<char>;

#define FOR(_i, _a, _b) for (auto _i = (_a); _i <= (_b); ++(_i))
#define FORD(_i, _a, _b) for (auto _i = (_a); _i >= (_b); --(_i))
#define RNG(_l) (_l).begin(), (_l).end()
#define SORT(_l) std::sort((_l).begin(), (_l).end())
#define CI(_v) static_cast<int>(_v)
#define CL(_v) static_cast<ll>(_v)
#define CD(_v) static_cast<ld>(_v)
#define CC(_v) static_cast<char>(_v)
#define SZ(_v) static_cast<int>((_v).size())
#define F first
#define S second
#define PB push_back

constexpr int MAX_N = 1000;
std::array<int, MAX_N*2> x_vec;
std::unordered_map<int, int> x_map;

std::array<std::array<int, MAX_N*2>, MAX_N*2> bit;
class Fenwick2D {
public:
  // Fenwick2D(int n_, int m_) : n(n_), m(m_), bit(n_, vl(m_, 0)) {}
  Fenwick2D(const int n_, const int m_) : n(n_), m(m_) {
    FOR(i, 0, n - 1) std::fill(bit[i].begin(), bit[i].begin() + m, 0);
  }

  // Add(i, j, delta): прибавить delta к ячейке (i, j)
  // 0 <= i < n, 0 <= j < m
  void Add(const int i, const int j, const int delta) {
    for (int x = i; x < n; x = x | (x + 1))
      for (int y = j; y < m; y = y | (y + 1))
        bit[x][y] += delta;
  }

  // Sum(x1..x2, y1..y2): сумма на прямоугольнике [x1..x2] x [y1..y2], включительно
  [[nodiscard]] int Sum(const int x1, const int x2, const int y1, const int y2) const {
    if (x1 > x2 || y1 > y2) return 0;
    return  Get(x2, y2)
          - Get(x1 - 1, y2)
          - Get(x2, y1 - 1)
          + Get(x1 - 1, y1 - 1);
  }
private:
  int n, m;
  // vvl bit; // [0..n-1][0..m-1]
  
  // внутренняя: сумма на прямоугольнике [0..i] x [0..j]
  [[nodiscard]] int PrefixSum(const int i, const int j) const {
    int res = 0;
    for (int x = i; x >= 0; x = (x & (x + 1)) - 1)
      for (int y = j; y >= 0; y = (y & (y + 1)) - 1)
        res += bit[x][y];
    return res;
  }

  [[nodiscard]] int Get(int xi, int yj) const {
    return (xi < 0 || yj < 0) ? 0LL : PrefixSum(xi, yj);
  }
};

bool IsLeftCorner(const int pi, const int pj, const vvi& ps) {
  return (ps[pi][0] <= ps[pj][0] && ps[pi][1] >= ps[pj][1]) || (ps[pj][0] <= ps[pi][0] && ps[pj][1] >= ps[pi][1]);
}

class Solution {
public:
  int numberOfPairs(vvi& ps) {
    const auto pn = SZ(ps);

    auto xn = 0;
    for (const auto& p : ps) {
      x_vec[xn++] = p[0];
      x_vec[xn++] = p[1];
    }
    std::sort(x_vec.begin(), x_vec.begin() + xn);
    x_map.clear();
    FOR(i, 0, xn - 1) if (!x_map.contains(x_vec[i])) x_map[x_vec[i]] = SZ(x_map);
    xn = SZ(x_map);
    Fenwick2D fenw(xn, xn);
    for (auto& p : ps) {
      p[0] = x_map[p[0]];
      p[1] = x_map[p[1]];
      fenw.Add(p[0], p[1], 1);
    }
    
    auto res = 0;
    FOR(pi, 0, pn - 2) {
      FOR(pj, pi + 1, pn - 1) {
        if (IsLeftCorner(pi, pj, ps)) {
          const auto min_x = std::min(ps[pi][0], ps[pj][0]), max_x = std::max(ps[pi][0], ps[pj][0]);
          const auto min_y = std::min(ps[pi][1], ps[pj][1]), max_y = std::max(ps[pi][1], ps[pj][1]);
          const auto cnt = fenw.Sum(min_x, max_x, min_y, max_y);
          res += (cnt == 2);
        }
      }
    }
    return res;
  }
};

[[maybe_unused]] void TestSolution() {
  {
    const auto start_t = std::chrono::high_resolution_clock::now();

    vvi ps{{1,1},{2,2},{3,3}};
    const auto a_out = Solution().numberOfPairs(ps);
    assert(a_out == 0);
  
    const auto end_t = std::chrono::high_resolution_clock::now();
    const auto total_t = std::chrono::duration_cast<std::chrono::milliseconds>(end_t - start_t).count();
    std::cerr << total_t << " ms"sv << std::endl;
  }
  {
    const auto start_t = std::chrono::high_resolution_clock::now();

    vvi ps{{6,2},{4,4},{2,6}};
    const auto a_out = Solution().numberOfPairs(ps);
    assert(a_out == 2);
  
    const auto end_t = std::chrono::high_resolution_clock::now();
    const auto total_t = std::chrono::duration_cast<std::chrono::milliseconds>(end_t - start_t).count();
    std::cerr << total_t << " ms"sv << std::endl;
  }
  {
    const auto start_t = std::chrono::high_resolution_clock::now();

    vvi ps{{3,1},{1,3},{1,1}};
    const auto a_out = Solution().numberOfPairs(ps);
    assert(a_out == 2);
  
    const auto end_t = std::chrono::high_resolution_clock::now();
    const auto total_t = std::chrono::duration_cast<std::chrono::milliseconds>(end_t - start_t).count();
    std::cerr << total_t << " ms"sv << std::endl;
  }
  {
    const auto start_t = std::chrono::high_resolution_clock::now();

    vvi ps{{999999999,1000},{999999998,2000},{999999997,3000},{999999996,4000},{999999995,5000},{999999994,6000},{999999993,7000},{999999992,8000},{999999991,9000},{999999990,10000},{999999989,11000},{999999988,12000},{999999987,13000},{999999986,14000},{999999985,15000},{999999984,16000},{999999983,17000},{999999982,18000},{999999981,19000},{999999980,20000},{999999979,21000},{999999978,22000},{999999977,23000},{999999976,24000},{999999975,25000},{999999974,26000},{999999973,27000},{999999972,28000},{999999971,29000},{999999970,30000},{999999969,31000},{999999968,32000},{999999967,33000},{999999966,34000},{999999965,35000},{999999964,36000},{999999963,37000},{999999962,38000},{999999961,39000},{999999960,40000},{999999959,41000},{999999958,42000},{999999957,43000},{999999956,44000},{999999955,45000},{999999954,46000},{999999953,47000},{999999952,48000},{999999951,49000},{999999950,50000},{999999949,51000},{999999948,52000},{999999947,53000},{999999946,54000},{999999945,55000},{999999944,56000},{999999943,57000},{999999942,58000},{999999941,59000},{999999940,60000},{999999939,61000},{999999938,62000},{999999937,63000},{999999936,64000},{999999935,65000},{999999934,66000},{999999933,67000},{999999932,68000},{999999931,69000},{999999930,70000},{999999929,71000},{999999928,72000},{999999927,73000},{999999926,74000},{999999925,75000},{999999924,76000},{999999923,77000},{999999922,78000},{999999921,79000},{999999920,80000},{999999919,81000},{999999918,82000},{999999917,83000},{999999916,84000},{999999915,85000},{999999914,86000},{999999913,87000},{999999912,88000},{999999911,89000},{999999910,90000},{999999909,91000},{999999908,92000},{999999907,93000},{999999906,94000},{999999905,95000},{999999904,96000},{999999903,97000},{999999902,98000},{999999901,99000},{999999900,100000},{999999899,101000},{999999898,102000},{999999897,103000},{999999896,104000},{999999895,105000},{999999894,106000},{999999893,107000},{999999892,108000},{999999891,109000},{999999890,110000},{999999889,111000},{999999888,112000},{999999887,113000},{999999886,114000},{999999885,115000},{999999884,116000},{999999883,117000},{999999882,118000},{999999881,119000},{999999880,120000},{999999879,121000},{999999878,122000},{999999877,123000},{999999876,124000},{999999875,125000},{999999874,126000},{999999873,127000},{999999872,128000},{999999871,129000},{999999870,130000},{999999869,131000},{999999868,132000},{999999867,133000},{999999866,134000},{999999865,135000},{999999864,136000},{999999863,137000},{999999862,138000},{999999861,139000},{999999860,140000},{999999859,141000},{999999858,142000},{999999857,143000},{999999856,144000},{999999855,145000},{999999854,146000},{999999853,147000},{999999852,148000},{999999851,149000},{999999850,150000},{999999849,151000},{999999848,152000},{999999847,153000},{999999846,154000},{999999845,155000},{999999844,156000},{999999843,157000},{999999842,158000},{999999841,159000},{999999840,160000},{999999839,161000},{999999838,162000},{999999837,163000},{999999836,164000},{999999835,165000},{999999834,166000},{999999833,167000},{999999832,168000},{999999831,169000},{999999830,170000},{999999829,171000},{999999828,172000},{999999827,173000},{999999826,174000},{999999825,175000},{999999824,176000},{999999823,177000},{999999822,178000},{999999821,179000},{999999820,180000},{999999819,181000},{999999818,182000},{999999817,183000},{999999816,184000},{999999815,185000},{999999814,186000},{999999813,187000},{999999812,188000},{999999811,189000},{999999810,190000},{999999809,191000},{999999808,192000},{999999807,193000},{999999806,194000},{999999805,195000},{999999804,196000},{999999803,197000},{999999802,198000},{999999801,199000},{999999800,200000},{999999799,201000},{999999798,202000},{999999797,203000},{999999796,204000},{999999795,205000},{999999794,206000},{999999793,207000},{999999792,208000},{999999791,209000},{999999790,210000},{999999789,211000},{999999788,212000},{999999787,213000},{999999786,214000},{999999785,215000},{999999784,216000},{999999783,217000},{999999782,218000},{999999781,219000},{999999780,220000},{999999779,221000},{999999778,222000},{999999777,223000},{999999776,224000},{999999775,225000},{999999774,226000},{999999773,227000},{999999772,228000},{999999771,229000},{999999770,230000},{999999769,231000},{999999768,232000},{999999767,233000},{999999766,234000},{999999765,235000},{999999764,236000},{999999763,237000},{999999762,238000},{999999761,239000},{999999760,240000},{999999759,241000},{999999758,242000},{999999757,243000},{999999756,244000},{999999755,245000},{999999754,246000},{999999753,247000},{999999752,248000},{999999751,249000},{999999750,250000},{999999749,251000},{999999748,252000},{999999747,253000},{999999746,254000},{999999745,255000},{999999744,256000},{999999743,257000},{999999742,258000},{999999741,259000},{999999740,260000},{999999739,261000},{999999738,262000},{999999737,263000},{999999736,264000},{999999735,265000},{999999734,266000},{999999733,267000},{999999732,268000},{999999731,269000},{999999730,270000},{999999729,271000},{999999728,272000},{999999727,273000},{999999726,274000},{999999725,275000},{999999724,276000},{999999723,277000},{999999722,278000},{999999721,279000},{999999720,280000},{999999719,281000},{999999718,282000},{999999717,283000},{999999716,284000},{999999715,285000},{999999714,286000},{999999713,287000},{999999712,288000},{999999711,289000},{999999710,290000},{999999709,291000},{999999708,292000},{999999707,293000},{999999706,294000},{999999705,295000},{999999704,296000},{999999703,297000},{999999702,298000},{999999701,299000},{999999700,300000},{999999699,301000},{999999698,302000},{999999697,303000},{999999696,304000},{999999695,305000},{999999694,306000},{999999693,307000},{999999692,308000},{999999691,309000},{999999690,310000},{999999689,311000},{999999688,312000},{999999687,313000},{999999686,314000},{999999685,315000},{999999684,316000},{999999683,317000},{999999682,318000},{999999681,319000},{999999680,320000},{999999679,321000},{999999678,322000},{999999677,323000},{999999676,324000},{999999675,325000},{999999674,326000},{999999673,327000},{999999672,328000},{999999671,329000},{999999670,330000},{999999669,331000},{999999668,332000},{999999667,333000},{999999666,334000},{999999665,335000},{999999664,336000},{999999663,337000},{999999662,338000},{999999661,339000},{999999660,340000},{999999659,341000},{999999658,342000},{999999657,343000},{999999656,344000},{999999655,345000},{999999654,346000},{999999653,347000},{999999652,348000},{999999651,349000},{999999650,350000},{999999649,351000},{999999648,352000},{999999647,353000},{999999646,354000},{999999645,355000},{999999644,356000},{999999643,357000},{999999642,358000},{999999641,359000},{999999640,360000},{999999639,361000},{999999638,362000},{999999637,363000},{999999636,364000},{999999635,365000},{999999634,366000},{999999633,367000},{999999632,368000},{999999631,369000},{999999630,370000},{999999629,371000},{999999628,372000},{999999627,373000},{999999626,374000},{999999625,375000},{999999624,376000},{999999623,377000},{999999622,378000},{999999621,379000},{999999620,380000},{999999619,381000},{999999618,382000},{999999617,383000},{999999616,384000},{999999615,385000},{999999614,386000},{999999613,387000},{999999612,388000},{999999611,389000},{999999610,390000},{999999609,391000},{999999608,392000},{999999607,393000},{999999606,394000},{999999605,395000},{999999604,396000},{999999603,397000},{999999602,398000},{999999601,399000},{999999600,400000},{999999599,401000},{999999598,402000},{999999597,403000},{999999596,404000},{999999595,405000},{999999594,406000},{999999593,407000},{999999592,408000},{999999591,409000},{999999590,410000},{999999589,411000},{999999588,412000},{999999587,413000},{999999586,414000},{999999585,415000},{999999584,416000},{999999583,417000},{999999582,418000},{999999581,419000},{999999580,420000},{999999579,421000},{999999578,422000},{999999577,423000},{999999576,424000},{999999575,425000},{999999574,426000},{999999573,427000},{999999572,428000},{999999571,429000},{999999570,430000},{999999569,431000},{999999568,432000},{999999567,433000},{999999566,434000},{999999565,435000},{999999564,436000},{999999563,437000},{999999562,438000},{999999561,439000},{999999560,440000},{999999559,441000},{999999558,442000},{999999557,443000},{999999556,444000},{999999555,445000},{999999554,446000},{999999553,447000},{999999552,448000},{999999551,449000},{999999550,450000},{999999549,451000},{999999548,452000},{999999547,453000},{999999546,454000},{999999545,455000},{999999544,456000},{999999543,457000},{999999542,458000},{999999541,459000},{999999540,460000},{999999539,461000},{999999538,462000},{999999537,463000},{999999536,464000},{999999535,465000},{999999534,466000},{999999533,467000},{999999532,468000},{999999531,469000},{999999530,470000},{999999529,471000},{999999528,472000},{999999527,473000},{999999526,474000},{999999525,475000},{999999524,476000},{999999523,477000},{999999522,478000},{999999521,479000},{999999520,480000},{999999519,481000},{999999518,482000},{999999517,483000},{999999516,484000},{999999515,485000},{999999514,486000},{999999513,487000},{999999512,488000},{999999511,489000},{999999510,490000},{999999509,491000},{999999508,492000},{999999507,493000},{999999506,494000},{999999505,495000},{999999504,496000},{999999503,497000},{999999502,498000},{999999501,499000},{999999500,500000},{999999499,501000},{999999498,502000},{999999497,503000},{999999496,504000},{999999495,505000},{999999494,506000},{999999493,507000},{999999492,508000},{999999491,509000},{999999490,510000},{999999489,511000},{999999488,512000},{999999487,513000},{999999486,514000},{999999485,515000},{999999484,516000},{999999483,517000},{999999482,518000},{999999481,519000},{999999480,520000},{999999479,521000},{999999478,522000},{999999477,523000},{999999476,524000},{999999475,525000},{999999474,526000},{999999473,527000},{999999472,528000},{999999471,529000},{999999470,530000},{999999469,531000},{999999468,532000},{999999467,533000},{999999466,534000},{999999465,535000},{999999464,536000},{999999463,537000},{999999462,538000},{999999461,539000},{999999460,540000},{999999459,541000},{999999458,542000},{999999457,543000},{999999456,544000},{999999455,545000},{999999454,546000},{999999453,547000},{999999452,548000},{999999451,549000},{999999450,550000},{999999449,551000},{999999448,552000},{999999447,553000},{999999446,554000},{999999445,555000},{999999444,556000},{999999443,557000},{999999442,558000},{999999441,559000},{999999440,560000},{999999439,561000},{999999438,562000},{999999437,563000},{999999436,564000},{999999435,565000},{999999434,566000},{999999433,567000},{999999432,568000},{999999431,569000},{999999430,570000},{999999429,571000},{999999428,572000},{999999427,573000},{999999426,574000},{999999425,575000},{999999424,576000},{999999423,577000},{999999422,578000},{999999421,579000},{999999420,580000},{999999419,581000},{999999418,582000},{999999417,583000},{999999416,584000},{999999415,585000},{999999414,586000},{999999413,587000},{999999412,588000},{999999411,589000},{999999410,590000},{999999409,591000},{999999408,592000},{999999407,593000},{999999406,594000},{999999405,595000},{999999404,596000},{999999403,597000},{999999402,598000},{999999401,599000},{999999400,600000},{999999399,601000},{999999398,602000},{999999397,603000},{999999396,604000},{999999395,605000},{999999394,606000},{999999393,607000},{999999392,608000},{999999391,609000},{999999390,610000},{999999389,611000},{999999388,612000},{999999387,613000},{999999386,614000},{999999385,615000},{999999384,616000},{999999383,617000},{999999382,618000},{999999381,619000},{999999380,620000},{999999379,621000},{999999378,622000},{999999377,623000},{999999376,624000},{999999375,625000},{999999374,626000},{999999373,627000},{999999372,628000},{999999371,629000},{999999370,630000},{999999369,631000},{999999368,632000},{999999367,633000},{999999366,634000},{999999365,635000},{999999364,636000},{999999363,637000},{999999362,638000},{999999361,639000},{999999360,640000},{999999359,641000},{999999358,642000},{999999357,643000},{999999356,644000},{999999355,645000},{999999354,646000},{999999353,647000},{999999352,648000},{999999351,649000},{999999350,650000},{999999349,651000},{999999348,652000},{999999347,653000},{999999346,654000},{999999345,655000},{999999344,656000},{999999343,657000},{999999342,658000},{999999341,659000},{999999340,660000},{999999339,661000},{999999338,662000},{999999337,663000},{999999336,664000},{999999335,665000},{999999334,666000},{999999333,667000},{999999332,668000},{999999331,669000},{999999330,670000},{999999329,671000},{999999328,672000},{999999327,673000},{999999326,674000},{999999325,675000},{999999324,676000},{999999323,677000},{999999322,678000},{999999321,679000},{999999320,680000},{999999319,681000},{999999318,682000},{999999317,683000},{999999316,684000},{999999315,685000},{999999314,686000},{999999313,687000},{999999312,688000},{999999311,689000},{999999310,690000},{999999309,691000},{999999308,692000},{999999307,693000},{999999306,694000},{999999305,695000},{999999304,696000},{999999303,697000},{999999302,698000},{999999301,699000},{999999300,700000},{999999299,701000},{999999298,702000},{999999297,703000},{999999296,704000},{999999295,705000},{999999294,706000},{999999293,707000},{999999292,708000},{999999291,709000},{999999290,710000},{999999289,711000},{999999288,712000},{999999287,713000},{999999286,714000},{999999285,715000},{999999284,716000},{999999283,717000},{999999282,718000},{999999281,719000},{999999280,720000},{999999279,721000},{999999278,722000},{999999277,723000},{999999276,724000},{999999275,725000},{999999274,726000},{999999273,727000},{999999272,728000},{999999271,729000},{999999270,730000},{999999269,731000},{999999268,732000},{999999267,733000},{999999266,734000},{999999265,735000},{999999264,736000},{999999263,737000},{999999262,738000},{999999261,739000},{999999260,740000},{999999259,741000},{999999258,742000},{999999257,743000},{999999256,744000},{999999255,745000},{999999254,746000},{999999253,747000},{999999252,748000},{999999251,749000},{999999250,750000},{999999249,751000},{999999248,752000},{999999247,753000},{999999246,754000},{999999245,755000},{999999244,756000},{999999243,757000},{999999242,758000},{999999241,759000},{999999240,760000},{999999239,761000},{999999238,762000},{999999237,763000},{999999236,764000},{999999235,765000},{999999234,766000},{999999233,767000},{999999232,768000},{999999231,769000},{999999230,770000},{999999229,771000},{999999228,772000},{999999227,773000},{999999226,774000},{999999225,775000},{999999224,776000},{999999223,777000},{999999222,778000},{999999221,779000},{999999220,780000},{999999219,781000},{999999218,782000},{999999217,783000},{999999216,784000},{999999215,785000},{999999214,786000},{999999213,787000},{999999212,788000},{999999211,789000},{999999210,790000},{999999209,791000},{999999208,792000},{999999207,793000},{999999206,794000},{999999205,795000},{999999204,796000},{999999203,797000},{999999202,798000},{999999201,799000},{999999200,800000},{999999199,801000},{999999198,802000},{999999197,803000},{999999196,804000},{999999195,805000},{999999194,806000},{999999193,807000},{999999192,808000},{999999191,809000},{999999190,810000},{999999189,811000},{999999188,812000},{999999187,813000},{999999186,814000},{999999185,815000},{999999184,816000},{999999183,817000},{999999182,818000},{999999181,819000},{999999180,820000},{999999179,821000},{999999178,822000},{999999177,823000},{999999176,824000},{999999175,825000},{999999174,826000},{999999173,827000},{999999172,828000},{999999171,829000},{999999170,830000},{999999169,831000},{999999168,832000},{999999167,833000},{999999166,834000},{999999165,835000},{999999164,836000},{999999163,837000},{999999162,838000},{999999161,839000},{999999160,840000},{999999159,841000},{999999158,842000},{999999157,843000},{999999156,844000},{999999155,845000},{999999154,846000},{999999153,847000},{999999152,848000},{999999151,849000},{999999150,850000},{999999149,851000},{999999148,852000},{999999147,853000},{999999146,854000},{999999145,855000},{999999144,856000},{999999143,857000},{999999142,858000},{999999141,859000},{999999140,860000},{999999139,861000},{999999138,862000},{999999137,863000},{999999136,864000},{999999135,865000},{999999134,866000},{999999133,867000},{999999132,868000},{999999131,869000},{999999130,870000},{999999129,871000},{999999128,872000},{999999127,873000},{999999126,874000},{999999125,875000},{999999124,876000},{999999123,877000},{999999122,878000},{999999121,879000},{999999120,880000},{999999119,881000},{999999118,882000},{999999117,883000},{999999116,884000},{999999115,885000},{999999114,886000},{999999113,887000},{999999112,888000},{999999111,889000},{999999110,890000},{999999109,891000},{999999108,892000},{999999107,893000},{999999106,894000},{999999105,895000},{999999104,896000},{999999103,897000},{999999102,898000},{999999101,899000},{999999100,900000},{999999099,901000},{999999098,902000},{999999097,903000},{999999096,904000},{999999095,905000},{999999094,906000},{999999093,907000},{999999092,908000},{999999091,909000},{999999090,910000},{999999089,911000},{999999088,912000},{999999087,913000},{999999086,914000},{999999085,915000},{999999084,916000},{999999083,917000},{999999082,918000},{999999081,919000},{999999080,920000},{999999079,921000},{999999078,922000},{999999077,923000},{999999076,924000},{999999075,925000},{999999074,926000},{999999073,927000},{999999072,928000},{999999071,929000},{999999070,930000},{999999069,931000},{999999068,932000},{999999067,933000},{999999066,934000},{999999065,935000},{999999064,936000},{999999063,937000},{999999062,938000},{999999061,939000},{999999060,940000},{999999059,941000},{999999058,942000},{999999057,943000},{999999056,944000},{999999055,945000},{999999054,946000},{999999053,947000},{999999052,948000},{999999051,949000},{999999050,950000},{999999049,951000},{999999048,952000},{999999047,953000},{999999046,954000},{999999045,955000},{999999044,956000},{999999043,957000},{999999042,958000},{999999041,959000},{999999040,960000},{999999039,961000},{999999038,962000},{999999037,963000},{999999036,964000},{999999035,965000},{999999034,966000},{999999033,967000},{999999032,968000},{999999031,969000},{999999030,970000},{999999029,971000},{999999028,972000},{999999027,973000},{999999026,974000},{999999025,975000},{999999024,976000},{999999023,977000},{999999022,978000},{999999021,979000},{999999020,980000},{999999019,981000},{999999018,982000},{999999017,983000},{999999016,984000},{999999015,985000},{999999014,986000},{999999013,987000},{999999012,988000},{999999011,989000},{999999010,990000},{999999009,991000},{999999008,992000},{999999007,993000},{999999006,994000},{999999005,995000},{999999004,996000},{999999003,997000},{999999002,998000},{999999001,999000},{999999000,1000000}};
    const auto a_out = Solution().numberOfPairs(ps);
    assert(a_out == 999);
  
    const auto end_t = std::chrono::high_resolution_clock::now();
    const auto total_t = std::chrono::duration_cast<std::chrono::milliseconds>(end_t - start_t).count();
    std::cerr << total_t << " ms"sv << std::endl;
  }
  std::cerr << "TestSolution OK"sv << std::endl;
}

int main() {
#ifndef NDEBUG
  TestSolution();
#endif
  return 0;
}
